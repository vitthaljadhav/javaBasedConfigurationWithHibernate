  {
 @Configuration
 @EntityScan("com.sears")
 @EnableTransactionManagement
 @PropertySource({"classpath:application.properties"})

  public class JpaConfiguration {

@Value("${spring.datasource.driver-class-name}") String driverClassName;
@Value("${spring.datasource.url}") String url;
@Value("${spring.datasource.username}") String username;
@Value("${spring.datasource.password}") String password;

@Bean(name = "dataSource")

public DataSource getDataSource() throws SQLException {
    System.out.println("inside data source");

    DataSource dataSource = DataSourceBuilder
            .create()
            .username(username)
            .password(password)
            .url(url)
            .driverClassName(driverClassName)
            .build();
    return dataSource;
}
@Bean(name = "sessionFactory")
public SessionFactory getSessionFactory(DataSource dataSource) {

    LocalSessionFactoryBuilder sessionBuilder = new 
 LocalSessionFactoryBuilder(dataSource);
    sessionBuilder.scanPackages("com.sears");
    return sessionBuilder.buildSessionFactory();
}
@Bean(name = "transactionManager")
public HibernateTransactionManager getTransactionManager(
        SessionFactory sessionFactory) {
    HibernateTransactionManager transactionManager = new 
 HibernateTransactionManager(
            sessionFactory);
    return transactionManager;
}   
@Bean
public DataSourceInitializer dataSourceInitializer(final DataSource 
 dataSource) {
    final DataSourceInitializer initializer = new DataSourceInitializer();
    initializer.setDataSource(dataSource);
    return initializer;
}    
}